# GitHub Actions for GEOS
#
# Paul Ramsey <pramsey at cleverelephant dot ca>

name: "CI"
on:
  push:
    branches-ignore:
      - 'master'
  pull_request: ~

jobs:
  linux:
    name: "CI"
    strategy:
      matrix:
        ci:
        # Use the last stable releases to run more tests
        - { tag: pg13-geos39-gdal31-proj71, mode: tests }
        # - { tag: pg12-geos37-gdal30-proj611, mode: tests }
        # - { tag: pg11-geos37-gdal24-proj52, mode: tests }
        # - { tag: pg10-geos36-gdal23-proj49, mode: tests }
        # - { tag: pg96-geos36-gdal22-proj49, mode: tests }

    runs-on: ubuntu-latest
    steps:

    # - name: 'Install Docker'
    #   run: |
    #     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    #     sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    #     sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

    - name: 'Check Out'
      uses: actions/checkout@v2

    - name: 'Prepare Image'
      run: |
        set -e
        uname -a
        echo "/tmp/logbt-coredumps/core.%p.%E" | sudo tee /proc/sys/kernel/core_pattern
        echo "FROM postgis/postgis-build-env:${{ matrix.ci.tag }}" > Dockerfile
        echo "ADD --chown=postgres:postgres . /src/postgis" >> Dockerfile
        echo "CMD bash ci/run_${{ matrix.ci.mode }}.sh" >> Dockerfile
        docker build -t ogr-fdw-test .

    - name: 'Build & Test'
      run: |
        docker run -u root --name ogr-fdw-test-${GITHUB_RUN_NUMBER} ogr-fdw-test

    - name: 'Clean Up Image'
      if: ${{ success() }}
      run: |
        docker rm ogr-fdw-test-${GITHUB_RUN_NUMBER}


